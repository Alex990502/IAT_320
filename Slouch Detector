#include <Adafruit_CircuitPlayground.h>

#define SLOUCH_ANGLE  10.0
#define SLOUCH_TIME   3000
#define GRAVITY       9.80665
#define RAD2DEG       57.29579

float currentAngle;
float targetAngle;
unsigned long slouchStartTime;
bool slouching;
int vals[8] = {3, 2, 0, 1, 6, 9, 10, 12};

void setup() {
  CircuitPlayground.begin();
  Serial.begin(9600);
  targetAngle = 0;
}

void loop() {

  currentAngle =  RAD2DEG * asin(-CircuitPlayground.motionZ() / GRAVITY);

  Serial.println(currentAngle);

  if ((CircuitPlayground.leftButton()) || (CircuitPlayground.rightButton())) {
    targetAngle = currentAngle;
    CircuitPlayground.playTone(900, 100);
    delay(100);
    CircuitPlayground.playTone(900, 100);
    delay(100);
  }

  if (currentAngle - targetAngle > SLOUCH_ANGLE) {
    if (!slouching) {
      slouchStartTime = millis();
      slouching = true;
    }
  }
  else {
    slouching = false;
  }
  if (slouching) {
    if (millis() - slouchStartTime > SLOUCH_TIME) {
      CircuitPlayground.playTone(800, 500);
      CircuitPlayground.setPixelColor(0, 255, 241, 0);
      CircuitPlayground.setPixelColor(1, 255, 140, 0);
      CircuitPlayground.setPixelColor(2,   232, 17, 35);
      CircuitPlayground.setPixelColor(3,   236, 0, 140);
      CircuitPlayground.setPixelColor(4,   104, 33, 122);
      CircuitPlayground.setPixelColor(5, 0, 24, 143);
      CircuitPlayground.setPixelColor(6, 0, 188, 242);
      CircuitPlayground.setPixelColor(7,   0, 178, 148);
      CircuitPlayground.setPixelColor(8,   0, 158, 73);
      CircuitPlayground.setPixelColor(9,   186, 216, 10);
      delay(500);
      CircuitPlayground.setPixelColor(0, 0, 0, 0);
      CircuitPlayground.setPixelColor(1, 0, 0, 0);
      CircuitPlayground.setPixelColor(2,   0, 0, 0);
      CircuitPlayground.setPixelColor(3,   0, 0, 0);
      CircuitPlayground.setPixelColor(4,   0, 0, 0);
      CircuitPlayground.setPixelColor(5, 0, 0, 0);
      CircuitPlayground.setPixelColor(6, 0, 0, 0);
      CircuitPlayground.setPixelColor(7,   0, 0, 0);
      CircuitPlayground.setPixelColor(8,   0, 0, 0);
      CircuitPlayground.setPixelColor(9,   0, 0, 0);
      delay(500);
    }
  }
  delay(300);
}
